# Generated by Django 4.2.23 on 2025-09-08 00:49

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=30)),
                ('last_name', models.CharField(blank=True, max_length=35)),
                ('phone_number', models.CharField(error_messages={'unique': 'The phone number already exists'}, max_length=13, unique=True, validators=[django.core.validators.RegexValidator(regex='^989[0-3,9]\\d{8}$')])),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('username', models.CharField(max_length=35, unique=True)),
                ('is_staff', models.BooleanField(default=False, help_text='To check whether a user is staff or not')),
                ('is_active', models.BooleanField(default=True, help_text='To check whether user can login or not')),
                ('date_joined', models.DateTimeField(auto_now_add=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'MY User',
                'verbose_name_plural': 'MY USERS',
            },
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('avatar', models.ImageField(blank=True, null=True, upload_to='static/images/user')),
                ('gender', models.PositiveIntegerField(choices=[(0, 'Male'), (1, 'Female')], default=0)),
                ('role', models.PositiveIntegerField(choices=[(0, 'USER'), (1, 'admin')], default=0)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='profile', to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
